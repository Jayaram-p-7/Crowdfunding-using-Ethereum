{"remainingRequest":"/home/jayarap/Documents/crowdfunding/node_modules/babel-loader/lib/index.js!/home/jayarap/Documents/crowdfunding/node_modules/vuetify-loader/lib/loader.js!/home/jayarap/Documents/crowdfunding/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jayarap/Documents/crowdfunding/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jayarap/Documents/crowdfunding/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jayarap/Documents/crowdfunding/src/App.vue","mtime":1581230512293},{"path":"/home/jayarap/Documents/crowdfunding/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jayarap/Documents/crowdfunding/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jayarap/Documents/crowdfunding/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/jayarap/Documents/crowdfunding/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jayarap/Documents/crowdfunding/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseInt from \"/home/jayarap/Documents/crowdfunding/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _slicedToArray from \"/home/jayarap/Documents/crowdfunding/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// We import our the scripts for the smart contract instantiation, and web3\nimport crowdfundInstance from \"../contracts/crowdfundInstance\";\nimport crowdfundProject from \"../contracts/crowdfundProjectInstance\";\nimport web3 from \"../contracts/web3\";\nexport default {\n  name: \"App\",\n  data: function data() {\n    return {\n      toggle_value: false,\n      startProjectDialog: false,\n      account: null,\n      stateMap: [{\n        color: \"primary\",\n        text: \"Ongoing\"\n      }, {\n        color: \"warning\",\n        text: \"Expired\"\n      }, {\n        color: \"success\",\n        text: \"Completed\"\n      }],\n      projectData: [],\n      newProject: {\n        isLoading: false\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // this code snippet takes the account (wallet) that is currently active\n    web3.eth.getAccounts().then(function (accounts) {\n      var _accounts = _slicedToArray(accounts, 1);\n\n      _this.account = _accounts[0];\n\n      _this.getProjects();\n    });\n  },\n  methods: {\n    getProjects: function getProjects() {\n      var _this2 = this;\n\n      crowdfundInstance.methods.returnAllProjects().call().then(function (projects) {\n        projects.forEach(function (projectAddress) {\n          var projectInst = crowdfundProject(projectAddress);\n          projectInst.methods.getDetails().call().then(function (projectData) {\n            var projectInfo = projectData;\n            projectInfo.isLoading = false;\n            projectInfo.contract = projectInst;\n\n            _this2.projectData.push(projectInfo);\n          });\n        });\n      });\n    },\n    startProject: function startProject() {\n      var _this3 = this;\n\n      this.newProject.isLoading = true;\n      crowdfundInstance.methods.startProject(this.newProject.title, this.newProject.description, this.newProject.duration, web3.utils.toWei(this.newProject.amountGoal, \"ether\"), this.newProject.reward).send({\n        from: this.account\n      }).then(function (res) {\n        var projectInfo = res.events.ProjectStarted.returnValues;\n        projectInfo.isLoading = false;\n        projectInfo.currentAmount = 0;\n        projectInfo.currentState = 0;\n        projectInfo.contract = crowdfundProject(projectInfo.contractAddress);\n        _this3.startProjectDialog = false;\n        _this3.newProject = {\n          isLoading: false\n        };\n      });\n    },\n    fundProject: function fundProject(index) {\n      var _this4 = this;\n\n      if (!this.projectData[index].fundAmount) {\n        return;\n      }\n\n      var projectContract = this.projectData[index].contract;\n      this.projectData[index].isLoading = true;\n      projectContract.methods.contribute().send({\n        from: this.account,\n        value: web3.utils.toWei(this.projectData[index].fundAmount, \"ether\")\n      }).then(function (res) {\n        var newTotal = _parseInt(res.events.FundingReceived.returnValues.currentTotal, 10);\n\n        var projectGoal = _parseInt(_this4.projectData[index].goalAmount, 10);\n\n        _this4.projectData[index].currentAmount = newTotal;\n        _this4.projectData[index].isLoading = false; // Set project state to success\n\n        if (newTotal >= projectGoal) {\n          _this4.projectData[index].currentState = 2;\n        }\n      });\n    },\n    rewardProject: function rewardProject(index) {\n      var _this5 = this;\n\n      if (!this.projectData[index].rewardAmount) {\n        return;\n      }\n\n      var projectContract = this.projectData[index].contract;\n      this.projectData[index].isLoading = true;\n      projectContract.methods.donate().send({\n        from: this.account,\n        value: web3.utils.toWei(this.projectData[index].rewardAmount, \"ether\")\n      }).then(function (res) {\n        _this5.projectData[index].isLoading = false;\n      });\n    },\n    getRefund: function getRefund(index) {\n      var _this6 = this;\n\n      this.projectData[index].isLoading = true;\n      this.projectData[index].contract.methods.getRefund().send({\n        from: this.account\n      }).then(function () {\n        _this6.projectData[index].isLoading = false;\n      });\n    },\n    getReward: function getReward(index) {\n      var _this7 = this;\n\n      this.projectData[index].isLoading = true;\n      this.projectData[index].contract.methods.getReward().send({\n        from: this.account\n      }).then(function () {\n        _this7.projectData[index].isLoading = false;\n      });\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<style scoped>\n@import \"./style.css\";\n</style>\n\n<template>\n  <v-app class=\"grey lighten-3\">\n    <v-content>\n      <v-container>\n        <v-layout text-xs-center wrap>\n          <v-flex mb-4>\n            <h1 class=\"display-2 font-weight-bold mb-3\">Crowdfunding</h1>\n            <p\n              class=\"subheading font-weight-regular\"\n            >Utilizing Ethereum for Decentralized Crowdfunding</p>\n          </v-flex>\n        </v-layout>\n\n        <v-layout row justify-center>\n          <v-dialog v-model=\"startProjectDialog\" max-width=\"600px\" persistent>\n            <v-btn slot=\"activator\" color=\"primary\" dark>Start a Project</v-btn>\n            <v-card>\n              <v-card-title>\n                <span class=\"headline font-weight-bold mt-2 ml-4\">Bring your project to life</span>\n              </v-card-title>\n              <v-card-text class=\"pt-0\">\n                <v-container class=\"pt-0\" grid-list-md>\n                  <v-layout wrap>\n                    <v-flex xs12>\n                      <v-text-field label=\"Title\" persistent-hint v-model=\"newProject.title\"></v-text-field>\n                    </v-flex>\n                    <v-flex xs12>\n                      <v-textarea\n                        label=\"Description\"\n                        persistent-hint\n                        v-model=\"newProject.description\"\n                      ></v-textarea>\n                    </v-flex>\n                    <v-flex xs12 sm6>\n                      <v-text-field\n                        label=\"Amount Needed (ETH)\"\n                        type=\"number\"\n                        step=\"0.0001\"\n                        min=\"0\"\n                        v-model=\"newProject.amountGoal\"\n                      ></v-text-field>\n                    </v-flex>\n                    <v-flex xs12 sm6>\n                      <v-text-field\n                        label=\"Duration (in days)\"\n                        type=\"number\"\n                        v-model=\"newProject.duration\"\n                      ></v-text-field>\n                    </v-flex>\n                    <v-flex>\n                      <v-checkbox v-model=\"newProject.reward\" color=\"success\" label=\"Reward Based\"></v-checkbox>\n                    </v-flex>\n                  </v-layout>\n                </v-container>\n              </v-card-text>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn\n                  color=\"blue darken-1\"\n                  flat\n                  @click=\"startProjectDialog = false;\n                  newProject.isLoading = false;\"\n                >Close</v-btn>\n                <v-btn\n                  color=\"blue darken-1\"\n                  flat\n                  @click=\"startProject\"\n                  :loading=\"newProject.isLoading\"\n                >Save</v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </v-layout>\n      </v-container>\n\n      <v-container grid-list-lg>\n        <div class=\"container\">\n          <v-btn\n            color=\"primary\"\n            text-color=\"white\"\n            class=\"NonRewardBased\"\n            @click=\"toggle_value=false\"\n          >Non Reward Based</v-btn>\n          <v-btn\n            color=\"primary\"\n            text-color=\"white\"\n            class=\"RewardBased\"\n            @click=\"toggle_value=true\"\n          >Reward Based</v-btn>\n        </div>\n\n        <h1 class=\"display-1 font-weight-bold mb-3\">Projects</h1>\n        <v-layout row wrap>\n          <v-flex v-for=\"(project, index) in projectData\" :key=\"index\" xs12>\n            <v-dialog v-model=\"project.dialog\" width=\"800\">\n              <v-card>\n                <v-card-title class=\"headline font-weight-bold\">{{ project.projectTitle }}</v-card-title>\n                <v-card-text>{{ project.projectDesc }}</v-card-text>\n                <v-card-actions>\n                  <v-spacer></v-spacer>\n                  <v-btn\n                    color=\"blue darken-1\"\n                    flat=\"flat\"\n                    @click=\"projectData[index].dialog = false\"\n                  >Close</v-btn>\n                </v-card-actions>\n              </v-card>\n            </v-dialog>\n            <v-hover>\n              <v-card\n                v-if=\"project.reward==toggle_value\"\n                slot-scope=\"{ hover }\"\n                :class=\"`elevation-${hover ? 10 : 2}`\"\n              >\n                <v-card-title primary-title>\n                  <div style=\"width:100%\">\n                    <div class=\"headline font-weight-bold\">\n                      <v-chip\n                        label\n                        :color=\"stateMap[project.currentState].color\"\n                        text-color=\"white\"\n                        class=\"mt-0\"\n                      >{{ stateMap[project.currentState].text }}</v-chip>\n                      {{ project.projectTitle }}\n                      <v-chip\n                        v-if=\"project.reward\"\n                        color=\"success\"\n                        text-color=\"white\"\n                        class=\"RewardBasedIcon\"\n                      >\n                        <v-avatar left>\n                          <v-icon>info</v-icon>\n                        </v-avatar>Reward Based\n                      </v-chip>\n                    </div>\n                    <br />\n                    <span>{{ project.projectDesc.substring(0, 100) }}</span>\n                    <span v-if=\"project.projectDesc.length > 100\">\n                      ...\n                      <a @click=\"projectData[index].dialog = true\">[Show full]</a>\n                    </span>\n                    <br />\n                    <br />\n                    <small>\n                      Up Until:\n                      <b>{{ new Date(project.deadline * 1000) }}</b>\n                    </small>\n                    <br />\n                    <br />\n                    <small>\n                      Goal of\n                      <b>{{ project.goalAmount / 10**18 }} ETH</b>\n                    </small>\n                    <small v-if=\"project.currentState == 1\"> wasn't achieved before deadline</small>\n                    <small v-if=\"project.currentState == 2\"> has been achieved</small>\n                  </div>\n                </v-card-title>\n                <v-flex\n                  v-if=\"project.currentState == 0 && account != project.projectStarter\"\n                  class=\"d-flex ml-3\"\n                  xs12\n                  sm6\n                  md3\n                >\n                  <v-text-field\n                    label=\"Amount (in ETH)\"\n                    type=\"number\"\n                    step=\"0.0001\"\n                    min=\"0\"\n                    v-model=\"project.fundAmount\"\n                  ></v-text-field>\n                  <v-btn\n                    class=\"mt-3\"\n                    color=\"light-blue darken-1 white--text\"\n                    @click=\"fundProject(index)\"\n                    :loading=\"project.isLoading\"\n                  >Fund</v-btn>\n                </v-flex>\n\n                <v-card-actions v-if=\"project.currentState == 0\" class=\"text-xs-center\">\n                  <span\n                    class=\"font-weight-bold\"\n                    style=\"width: 200px;\"\n                  >{{ project.currentAmount / 10**18 }} ETH</span>\n                  <v-progress-linear\n                    height=\"10\"\n                    :color=\"stateMap[project.currentState].color\"\n                    :value=\"(project.currentAmount / project.goalAmount) * 100\"\n                  ></v-progress-linear>\n                  <span\n                    class=\"font-weight-bold\"\n                    style=\"width: 200px;\"\n                  >{{ project.goalAmount / 10**18 }} ETH</span>\n                </v-card-actions>\n                <div class=\"DonateReward\">\n                  <v-flex class=\"d-flex ml-3\" xs12 sm6 md3>\n                    <v-btn\n                      class=\"mt-3\"\n                      color=\"amber darken-1 white--text\"\n                      v-if=\"project.currentState == 1 && project.reward==toggle_value && account != project.projectStarter\"\n                      @click=\"getRefund(index)\"\n                      :loading=\"project.isLoading\"\n                    >Get refund</v-btn>\n                  </v-flex>\n                  <v-flex\n                    v-if=\"project.currentState == 2 && project.reward==toggle_value && project.rewardstate && account != project.projectStarter\"\n                    v-flex\n                    class=\"d-flex ml-3\"\n                    xs12\n                    sm6\n                    md3\n                  >\n                    <v-btn\n                      class=\"mt-3\"\n                      color=\"light-blue darken-1 white--text\"\n                      @click=\"getReward(index)\"\n                      :loading=\"project.isLoading\"\n                    >Get Reward</v-btn>\n                  </v-flex>\n                  <v-flex\n                    v-if=\"project.currentState == 2 && project.reward==toggle_value && account == project.projectStarter\"\n                    v-flex\n                    class=\"d-flex ml-3\"\n                    xs12\n                    sm6\n                    md3\n                  >\n                   <h3  v-if=\"project.rewardstate\" style=\"color:green\" class=\"ml-5\">Reward Donated!!!</h3> \n                    <v-text-field\n                      v-if=\"!project.rewardstate\"\n                      label=\"Amount (in ETH)\"\n                      type=\"number\"\n                      step=\"0.0001\"\n                      min=\"0\"\n                      v-model=\"project.rewardAmount\"\n                    ></v-text-field>\n                    <v-btn\n                      v-if=\"!project.rewardstate\"\n                      class=\"mt-3\"\n                      color=\"light-blue darken-1 white--text\"\n                      @click=\"rewardProject(index)\"\n                      :loading=\"project.isLoading\"\n                    >Reward</v-btn>\n                  </v-flex>\n                </div>\n              </v-card>\n            </v-hover>\n          </v-flex>\n        </v-layout>\n      </v-container>\n    </v-content>\n  </v-app>\n</template>\n\n<script>\n// We import our the scripts for the smart contract instantiation, and web3\nimport crowdfundInstance from \"../contracts/crowdfundInstance\";\nimport crowdfundProject from \"../contracts/crowdfundProjectInstance\";\nimport web3 from \"../contracts/web3\";\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      toggle_value: false,\n      startProjectDialog: false,\n      account: null,\n      stateMap: [\n        { color: \"primary\", text: \"Ongoing\" },\n        { color: \"warning\", text: \"Expired\" },\n        { color: \"success\", text: \"Completed\" }\n      ],\n      projectData: [],\n      newProject: { isLoading: false }\n    };\n  },\n  mounted() {\n    // this code snippet takes the account (wallet) that is currently active\n    web3.eth.getAccounts().then(accounts => {\n      [this.account] = accounts;\n      this.getProjects();\n    });\n  },\n  methods: {\n    getProjects() {\n      crowdfundInstance.methods\n        .returnAllProjects()\n        .call()\n        .then(projects => {\n          projects.forEach(projectAddress => {\n            const projectInst = crowdfundProject(projectAddress);\n            projectInst.methods\n              .getDetails()\n              .call()\n              .then(projectData => {\n                const projectInfo = projectData;\n                projectInfo.isLoading = false;\n                projectInfo.contract = projectInst;\n                this.projectData.push(projectInfo);\n              });\n          });\n        });\n    },\n    startProject() {\n      this.newProject.isLoading = true;\n      crowdfundInstance.methods\n        .startProject(\n          this.newProject.title,\n          this.newProject.description,\n          this.newProject.duration,\n          web3.utils.toWei(this.newProject.amountGoal, \"ether\"),\n          this.newProject.reward\n        )\n        .send({\n          from: this.account\n        })\n        .then(res => {\n          const projectInfo = res.events.ProjectStarted.returnValues;\n          projectInfo.isLoading = false;\n          projectInfo.currentAmount = 0;\n          projectInfo.currentState = 0;\n          projectInfo.contract = crowdfundProject(projectInfo.contractAddress);\n          this.startProjectDialog = false;\n          this.newProject = { isLoading: false };\n        });\n    },\n\n    fundProject(index) {\n      if (!this.projectData[index].fundAmount) {\n        return;\n      }\n\n      const projectContract = this.projectData[index].contract;\n      this.projectData[index].isLoading = true;\n      projectContract.methods\n        .contribute()\n        .send({\n          from: this.account,\n          value: web3.utils.toWei(this.projectData[index].fundAmount, \"ether\")\n        })\n        .then(res => {\n          const newTotal = parseInt(\n            res.events.FundingReceived.returnValues.currentTotal,\n            10\n          );\n          const projectGoal = parseInt(this.projectData[index].goalAmount, 10);\n          this.projectData[index].currentAmount = newTotal;\n          this.projectData[index].isLoading = false;\n\n          // Set project state to success\n          if (newTotal >= projectGoal) {\n            this.projectData[index].currentState = 2;\n          }\n        });\n    },\n\n    rewardProject(index) {\n      if (!this.projectData[index].rewardAmount) {\n        return;\n      }\n\n      const projectContract = this.projectData[index].contract;\n      this.projectData[index].isLoading = true;\n      projectContract.methods\n        .donate()\n        .send({\n          from: this.account,\n          value: web3.utils.toWei(this.projectData[index].rewardAmount, \"ether\")\n        })\n        .then(res => {\n          this.projectData[index].isLoading = false;\n        });\n    },\n\n    getRefund(index) {\n      this.projectData[index].isLoading = true;\n      this.projectData[index].contract.methods\n        .getRefund()\n        .send({\n          from: this.account\n        })\n        .then(() => {\n          this.projectData[index].isLoading = false;\n        });\n    },\n\n    getReward(index) {\n      this.projectData[index].isLoading = true;\n      this.projectData[index].contract.methods\n        .getReward()\n        .send({\n          from: this.account\n        })\n        .then(() => {\n          this.projectData[index].isLoading = false;\n        });\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src"}]}